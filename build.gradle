buildscript {
    ext {
        springBootVersion = '2.0.3.RELEASE'
    }

    //这里不要配置阿里云，会找不大盘net.ltgt.apt插件
    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'net.ltgt.apt' version '0.16'
}

//加载配置文件
apply from: 'config.gradle'

allprojects {
    //为所有module应用插件
    apply plugin: 'java'
    apply plugin: 'net.ltgt.apt'

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    version "${projectVersion}"

    repositories {
        mavenLocal()
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public'}
        jcenter()
        mavenCentral()
    }

    tasks.withType(JavaCompile){
        options.encoding = 'UTF-8'
        options.compilerArgs = [
                '-Amapstruct.suppressGeneratorTimestamp=true'
        ]
    }

    configurations.all {
        resolutionStrategy.cacheChangingModulesFor(0,'seconds')

        //强制指定版本
        resolutionStrategy{
            //force'org.hamcrest:hamcrest-core:1.3'
        }

        //排除依赖
//        all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
//        all*.exclude group: 'commons-logging', module: 'commons-logging'
    }

    task wrapper (type: Wrapper){
        gradleVersion = "${gradleVersion}"
    }
}

subprojects {
    dependencies {
        testCompile "junit:junit:${junitVersion}"
        testCompile "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"

        //SpringBoot
        compile "org.springframework.boot:spring-boot-starter:${springBootVersion}"
        compile "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"

        //dubbo
//        compile "com.alibaba:dubbo:${dubboVersion}"
        compile "com.alibaba.boot:dubbo-spring-boot-starter:${dubboSBVersion}"

        //mysql && mybatis && hikari
        runtime "mysql:mysql-connector-java:${mysqlVersion}"
        compile "org.mybatis.spring.boot:mybatis-spring-boot-starter:${mybatisSBVersion}"
        compile "com.zaxxer:HikariCP:${hikariCPVersion}"

        //inject
        compile "javax.inject:javax.inject:${injectVersion}"

        //gson
        compile "com.google.code.gson:gson:${gsonVersion}"

        //mapStruct
        compile "org.mapstruct:mapstruct:${mapstructVersion}"
        compile "org.mapstruct:mapstruct-jdk8:${mapstructVersion}"
        apt "org.mapstruct:mapstruct-processor:${mapstructVersion}"

        //lombok
        compileOnly "org.projectlombok:lombok:${lombokVersion}"
        apt "org.projectlombok:lombok:${lombokVersion}"

        //googleAutoService自动生成注解处理器注册文件
        compile "com.google.auto.service:auto-service:${googleAutoServiceVersion}"
    }
}
